name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  COURSIER_CACHE: ${{ github.workspace }}/.cache/coursier

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            os_tag: linux
            arch: x86_64
          - os: ubuntu-24.04-arm
            os_tag: linux
            arch: aarch64
          - os: macos-14
            os_tag: macos
            arch: aarch64
          - os: windows-2022
            os_tag: windows
            arch: x86_64
          - os: macos-14
            os_tag: macos
            arch: x86_64
          - os: windows-2022
            os_tag: windows
            arch: arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Just
        uses: extractions/setup-just@v3

      - name: Establish build variables - Windows
        if: runner.os == 'Windows'
        run: |
          echo "GRAALVM_ID=$(just graalvm-id)" >> $env:GITHUB_ENV
          echo "BINARY_NAME=$(just binary-name)" >> $env:GITHUB_ENV

      - name: Establish build variables - Unix
        if: runner.os != 'Windows'
        run: |
          echo "GRAALVM_ID=$(just graalvm-id)" >> $GITHUB_ENV
          echo "BINARY_NAME=$(just binary-name)" >> $GITHUB_ENV

      - name: Setup Scala CLI
        uses: VirtusLab/scala-cli-setup@v1.9.1
        with:
          power: true
          jvm: ${{ env.GRAALVM_ID }}
          apps: scala-cli

      - name: Establish scala-cli binary path - Windows
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          $path = (Get-Command scala-cli | Select-Object -ExpandProperty Path)
          echo "SCALA_CLI_BINARY_PATH=$path" >> $env:GITHUB_ENV

      - name: Cache Coursier
        uses: actions/cache@v4
        with:
          path: ${{ env.COURSIER_CACHE }}
          key: coursier-deps

      - name: Build
        run: just compile

      - name: Test
        run: just test

      - name: Build Native Image
        run: just native

      - name: Generate checksums
        run: just checksums ${{ matrix.os_tag }} ${{ matrix.arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}-${{ matrix.os_tag }}-${{ matrix.arch }}
          path: dist/
          retention-days: 3 # TODO bump later

  # Summary job to show all built artifacts
  summary:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List all artifacts
        run: |
          echo "Built artifacts:"
          tree artifacts/